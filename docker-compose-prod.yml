services:
  back:
    build:
      context: .
      dockerfile: Dockerfile.prod
    container_name: pointer-server-prod
    image: pointer-server-prod
    restart: always
    ports:
      - 8080:8080
    environment:
      - TZ=Asia/Seoul
      - SPRING_PROFILES_ACTIVE=prod
      - SPRING_DATASOURCE_URL=jdbc:mysql://pointer-mysql-prod:3306/${PROD_MYSQL_DATABASE}?useSSL=false&characterEncoding=UTF-8&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true&tinyInt1isBit=false
      - SPRING_DATASOURCE_USERNAME=${PROD_MYSQL_USER}
      - SPRING_DATASOURCE_PASSWORD=${PROD_MYSQL_PASSWORD}
      - SENTRY_DSN=${SENTRY_DSN}
      - CLOUD_AWS_S3_BUCKET=${S3_BUCKET}
      - CLOUD_AWS_S3_SIGNATURE_VERSION=AWS4-HMAC-SHA256
      - CLOUD_AWS_CREDENTIALS_ACCESS_KEY=${AWS_ACCESS_KEY}
      - CLOUD_AWS_CREDENTIALS_SECRET_KEY=${AWS_SECRET_KEY}
      - CLOUD_AWS_REGION_STATIC=${AWS_REGION}
      - CLOUD_AWS_REGION_AUTO=false
      - CLOUD_AWS_STACK_AUTO=false
      - JWT_ACCESS_TOKEN_SECRET=${JWT_ACCESS_TOKEN_SECRET}
      - JWT_REFRESH_TOKEN_SECRET=${JWT_REFRESH_TOKEN_SECRET}
      - JWT_ACCESS_TOKEN_EXPIRATION_TIME=${JWT_ACCESS_TOKEN_EXPIRATION_TIME} # 기본값: 2시간
      - JWT_REFRESH_TOKEN_EXPIRATION_TIME=${JWT_REFRESH_TOKEN_EXPIRATION_TIME} # 기본값: 7일
      - JWT_ISSUER=${JWT_ISSUER}
    depends_on:
      - mysql
    networks:
      - pointer-prod
      - nginx-network

  mysql:
    image: mysql:8.0
    container_name: pointer-mysql-prod
    environment:
      MYSQL_ROOT_PASSWORD: ${PROD_MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${PROD_MYSQL_DATABASE}
      MYSQL_USER: ${PROD_MYSQL_USER}
      MYSQL_PASSWORD: ${PROD_MYSQL_PASSWORD}
    ports:
      - "3306:3306"
    volumes:
      - pointer_prod_data:/var/lib/mysql
    networks:
      - pointer-prod
volumes:
  pointer_prod_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ../mopl_data/pointer_prod_data

networks:
  pointer-prod:
    driver: bridge
  nginx-network:
    external: true