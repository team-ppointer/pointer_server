services:
  back:
    build:
      context: .
      dockerfile: Dockerfile.prod
    container_name: pointer-server-prod
    image: pointer-server-prod
    restart: always
    ports:
      - 8080:8080
    environment:
      - TZ=Asia/Seoul
      - SPRING_PROFILES_ACTIVE=prod
      - SPRING_DATASOURCE_URL=jdbc:mysql://${PROD_MYSQL_HOST}:3306/${PROD_MYSQL_DATABASE}?useSSL=false&characterEncoding=UTF-8&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true&tinyInt1isBit=false
      - SPRING_DATASOURCE_USERNAME=${PROD_MYSQL_USER}
      - SPRING_DATASOURCE_PASSWORD=${PROD_MYSQL_PASSWORD}
      - SENTRY_DSN=${SENTRY_DSN}
      - CLOUD_AWS_S3_BUCKET=${S3_BUCKET}
      - CLOUD_AWS_S3_SIGNATURE_VERSION=AWS4-HMAC-SHA256
      - CLOUD_AWS_CREDENTIALS_ACCESS_KEY=${AWS_ACCESS_KEY}
      - CLOUD_AWS_CREDENTIALS_SECRET_KEY=${AWS_SECRET_KEY}
      - CLOUD_AWS_REGION_STATIC=${AWS_REGION}
      - CLOUD_AWS_REGION_AUTO=false
      - CLOUD_AWS_STACK_AUTO=false
      - JWT_ACCESS_TOKEN_SECRET=${JWT_ACCESS_TOKEN_SECRET}
      - JWT_REFRESH_TOKEN_SECRET=${JWT_REFRESH_TOKEN_SECRET}
      - JWT_ACCESS_TOKEN_EXPIRATION_TIME=${JWT_ACCESS_TOKEN_EXPIRATION_TIME} # 기본값: 2시간
      - JWT_REFRESH_TOKEN_EXPIRATION_TIME=${JWT_REFRESH_TOKEN_EXPIRATION_TIME} # 기본값: 7일
      - JWT_ISSUER=${JWT_ISSUER}
      - KAKAO_LOGIN_CLIENT_ID=${KAKAO_LOGIN_CLIENT_ID}
      - KAKAO_LOGIN_CLIENT_SECRET=${KAKAO_LOGIN_CLIENT_SECRET}
      - KAKAO_LOGIN_REDIRECT_URI=${KAKAO_LOGIN_PROD_REDIRECT_URI}
    depends_on:
      - mysql
    networks:
      - pointer-prod
      - nginx-network

networks:
  pointer-prod:
    driver: bridge
  nginx-network:
    external: true